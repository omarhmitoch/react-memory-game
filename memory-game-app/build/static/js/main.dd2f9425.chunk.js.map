{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","console","log","prevturns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAGe,SAASA,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAIhE,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKG,IAAKL,EAAKK,IAAKD,UAAU,QAAQE,IAAI,eAC1C,qBACED,IAAI,iBACJD,UAAU,OACVE,IAAI,YACJC,QAXY,WACbJ,GAAUF,EAAaD,WCDhC,IAAMQ,EAAa,CACjB,CAAEH,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,kBAAmBI,SAAS,GACnC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,mBAAoBI,SAAS,IAgFvBC,MA9Ef,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,GAFtB,mBAENG,EAFM,KAECC,EAFD,OAGqBJ,mBAAS,MAH9B,mBAGNK,EAHM,KAGKC,EAHL,OAIqBN,mBAAS,MAJ9B,mBAINO,EAJM,KAIKC,EAJL,OAKmBR,oBAAS,GAL5B,mBAKNR,EALM,KAKIiB,EALJ,KAOPC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB2B,GAAIH,KAAKC,cAEtCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAGLd,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIhD4B,qBAAU,WACJZ,GAAaE,IACfE,GAAY,GACRJ,EAAUX,KAAOa,EAAUb,KAC7BQ,GAAS,SAACgB,GACR,OAAOA,EAAUH,KAAI,SAAC1B,GACpB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAKL,GAAZ,IAAkBS,SAAS,IAEpBT,QAIb8B,KAEAC,YAAW,WACTD,MACC,QAGN,CAACd,EAAWE,IAEfc,QAAQC,IAAIrB,GAEZ,IAAMkB,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAACmB,GAAD,OAAeA,EAAY,KACpCd,GAAY,IAMd,OAHAQ,qBAAU,WACRP,MACC,IAED,sBAAKjB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASc,EAAjB,sBAEA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAC1B,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK2B,SAQhB,wCAAWb,EAAX,WChFNqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dd2f9425.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SingleCard.css\";\r\n\r\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\r\n  const handleClick = () => {\r\n    if (!disabled) handleChoice(card);\r\n  };\r\n  return (\r\n    <div className=\"card\">\r\n      <div className={flipped ? \"flipped\" : \"\"}>\r\n        <img src={card.src} className=\"front\" alt=\"cart front\" />\r\n        <img\r\n          src=\"/img/cover.png\"\r\n          className=\"back\"\r\n          alt=\"cart back\"\r\n          onClick={handleClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport SingleCard from \"./components/SingleCard\";\n\nconst cardImages = [\n  { src: \"/img/helmet-1.png\", matched: false },\n  { src: \"/img/potion-1.png\", matched: false },\n  { src: \"/img/ring-1.png\", matched: false },\n  { src: \"/img/scroll-1.png\", matched: false },\n  { src: \"/img/shield-1.png\", matched: false },\n  { src: \"/img/sword-1.png\", matched: false },\n];\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  // shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n  // handle a choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // compare 2 selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src == choiceTwo.src) {\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => {\n          resetTurn();\n        }, 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  console.log(cards);\n  // reset choices & increase turn\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns((prevturns) => prevturns + 1);\n    setDisabled(false);\n  };\n  // start a new game when the page load\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns} </p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}